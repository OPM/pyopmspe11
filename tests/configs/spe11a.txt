"""Set the full path to the flow executable and flags"""
flow --linear-solver=cprw --enable-tuning=true --enable-opm-rst-file=true --output-extra-convergence-info=steps,iterations  --enable-well-operability-check=false --min-time-step-before-shutting-problematic-wells-in-days=1e-99

"""Set the model parameters"""
spe11a release    #Name of the spe case (spe11a, spe11b, or spe11c) and OPM Flow version (master or release)
immiscible gaswater #Name of the co2 model (immiscible or complete) and co2store implementation (gaswater or gasoil [oil properties are set to water internally in OPM flow])
cartesian         #Type of grid (cartesian or corner-point)
2.8 0.01 1.2      #Length, width, and depth [m]
50                #If cartesian, number of x cells [-]; otherwise, variable array of x-refinment
1                 #If cartesian, number of y cells [-]; otherwise, variable array of y-refinment [-] (for spe11c)
25                #If cartesian, number of z cells [-]; if tensor, variable array of z-refinment; if corner-point, fix array of z-refinment (18 entries)
20 20             #Temperature bottom and top rig [C]
110000 1          #Pressure on the top [Pa] and multiplier for the permeability in the z direction [-] 
0 0 0             #Diffusion (in liquid and gas) [m^2/s] and dispersion [m] (dispersion only available in Flow master)
0 0               #Rock specific heat and density (for spe11b/c)
0 0 0             #Added pore volume on top boundary (for spe11a [if 0, free flow bc]), pore volume on lateral boundaries, and width of buffer cell [m] (for spe11b/c)
0 0               #Elevation of the parabola [m] (for spe11c) 

"""Set the saturation functions"""
(max(0, (s_w - swi) / (1 - swi))) ** 1.5                                                        #Wetting rel perm saturation function [-]
(max(0, (1 - s_w - sni) / (1 - sni))) ** 1.5                                                    #Non-wetting rel perm saturation function [-]
penmax * math.erf(pen * ((s_w-swi) / (1.-swi)) ** (-(1.0 / 1.5)) * math.pi**0.5 / (penmax * 2)) #Capillary pressure saturation function [Pa]
(np.exp(np.flip(np.linspace(0, 5.0, npoints))) - 1) / (np.exp(5.0) - 1)                         #Points to evaluate the saturation functions (s_w) [-]

"""Properties sat functions"""
"""swi [-], sni [-], pen [Pa], penmax [Pa], npoints [-]"""
SWI1 0.32 SNI1 0.1 PEN1 1500 PENMAX1 9.5e4 NPOINTS1 100
SWI2 0.14 SNI2 0.1 PEN2  300 PENMAX2 9.5e4 NPOINTS2 100
SWI3 0.12 SNI3 0.1 PEN3  100 PENMAX3 9.5e4 NPOINTS3 100
SWI4 0.12 SNI4 0.1 PEN4   25 PENMAX4 9.5e4 NPOINTS4 100
SWI5 0.12 SNI5 0.1 PEN5   10 PENMAX5 9.5e4 NPOINTS5 100
SWI6 0.10 SNI6 0.1 PEN6    1 PENMAX6 9.5e4 NPOINTS6 100
SWI7    0 SNI7   0 PEN7    0 PENMAX7 9.5e4 NPOINTS7   2

"""Properties rock"""
"""K [mD], phi [-]"""
PERM1 44529.9988 PORO1 0.44
PERM2 506624.985 PORO2 0.43
PERM3 1013249.97 PORO3 0.44
PERM4 2026499.95 PORO4 0.45
PERM5 4052999.88 PORO5 0.43
PERM6 10132499.7 PORO6 0.46
PERM7          0 PORO7    0

"""Wells position"""
"""radius (0 to use sources instead, only available in Flow master), x, y, and z position [m] (final positions as well for spe11c)"""
9E-4 0.9 0.005 0.3 #Well 1 
9E-4 1.7 0.005 0.7 #Well 2 

"""Define the injection values ([hours] for spe11a; [years] for spe11b/c)""" 
"""injection time, time step size to write results, maximum solver time step, injected fluid (0 water, 1 co2) (well1), injection rate [kg/s] (well1), temperature [C] (well1), injected fluid (0 water, 1 co2) (well2), ..."""
1.5 1.5 0.5 1 1.7E-7 20 1 1.7E-7 20